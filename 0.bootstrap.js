(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[0],{

/***/ "./wasmlife.js":
/*!**************************!*\
  !*** ./wasmlife.js ***!
  \**************************/
/*! exports provided: Cell, Universe, __wbindgen_string_new, __wbindgen_object_drop_ref, __wbg_log_f2e13ca55da8bad3, __wbg_random_100b0af4e8841b7c, __wbindgen_throw */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _wasmlife_bg_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./wasmlife_bg.wasm */ \"./wasmlife_bg.wasm\");\n/* harmony import */ var _wasmlife_bg_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./wasmlife_bg.js */ \"./wasmlife_bg.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Cell\", function() { return _wasmlife_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"Cell\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Universe\", function() { return _wasmlife_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"Universe\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_string_new\", function() { return _wasmlife_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbindgen_string_new\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_object_drop_ref\", function() { return _wasmlife_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbindgen_object_drop_ref\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_log_f2e13ca55da8bad3\", function() { return _wasmlife_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_log_f2e13ca55da8bad3\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_random_100b0af4e8841b7c\", function() { return _wasmlife_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_random_100b0af4e8841b7c\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_throw\", function() { return _wasmlife_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbindgen_throw\"]; });\n\n\n\n\n//# sourceURL=webpack:///./wasmlife.js?");

/***/ }),

/***/ "./wasmlife_bg.js":
/*!*****************************!*\
  !*** ./wasmlife_bg.js ***!
  \*****************************/
/*! exports provided: Cell, Universe, __wbindgen_string_new, __wbindgen_object_drop_ref, __wbg_log_f2e13ca55da8bad3, __wbg_random_100b0af4e8841b7c, __wbindgen_throw */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Cell\", function() { return Cell; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Universe\", function() { return Universe; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_string_new\", function() { return __wbindgen_string_new; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_object_drop_ref\", function() { return __wbindgen_object_drop_ref; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_log_f2e13ca55da8bad3\", function() { return __wbg_log_f2e13ca55da8bad3; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_random_100b0af4e8841b7c\", function() { return __wbg_random_100b0af4e8841b7c; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_throw\", function() { return __wbindgen_throw; });\n/* harmony import */ var _wasmlife_bg_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./wasmlife_bg.wasm */ \"./wasmlife_bg.wasm\");\n\n\nlet cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== _wasmlife_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer) {\n        cachegetUint8Memory0 = new Uint8Array(_wasmlife_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nfunction notDefined(what) { return () => { throw new Error(`${what} is not defined`); }; }\n/**\n*/\nconst Cell = Object.freeze({ Dead:0,\"0\":\"Dead\",Live:1,\"1\":\"Live\", });\n/**\n*/\nclass Universe {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Universe.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        _wasmlife_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_universe_free\"](ptr);\n    }\n    /**\n    * @param {number} row\n    * @param {number} col\n    */\n    toggle_cell(row, col) {\n        _wasmlife_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"universe_toggle_cell\"](this.ptr, row, col);\n    }\n    /**\n    * @param {number} cx\n    * @param {number} cy\n    * @param {number} dir\n    */\n    spawn_glider_at(cx, cy, dir) {\n        _wasmlife_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"universe_spawn_glider_at\"](this.ptr, cx, cy, dir);\n    }\n    /**\n    */\n    tick() {\n        _wasmlife_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"universe_tick\"](this.ptr);\n    }\n    /**\n    * @param {number} width\n    * @param {number} height\n    * @returns {Universe}\n    */\n    static new(width, height) {\n        var ret = _wasmlife_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"universe_new\"](width, height);\n        return Universe.__wrap(ret);\n    }\n    /**\n    * @param {number} p\n    */\n    init_random(p) {\n        _wasmlife_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"universe_init_random\"](this.ptr, p);\n    }\n    /**\n    * @param {number} dir\n    */\n    init_gliders(dir) {\n        _wasmlife_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"universe_init_gliders\"](this.ptr, dir);\n    }\n    /**\n    */\n    init_modulo() {\n        _wasmlife_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"universe_init_modulo\"](this.ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    width() {\n        var ret = _wasmlife_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"universe_width\"](this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    height() {\n        var ret = _wasmlife_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"universe_height\"](this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    cells() {\n        var ret = _wasmlife_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"universe_cells\"](this.ptr);\n        return ret;\n    }\n}\n\nconst __wbindgen_string_new = function(arg0, arg1) {\n    var ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n};\n\nconst __wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\nconst __wbg_log_f2e13ca55da8bad3 = function(arg0) {\n    console.log(getObject(arg0));\n};\n\nconst __wbg_random_100b0af4e8841b7c = typeof Math.random == 'function' ? Math.random : notDefined('Math.random');\n\nconst __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n\n\n//# sourceURL=webpack:///./wasmlife_bg.js?");

/***/ }),

/***/ "./wasmlife_bg.wasm":
/*!*******************************!*\
  !*** ./wasmlife_bg.wasm ***!
  \*******************************/
/*! exports provided: memory, __wbg_universe_free, universe_toggle_cell, universe_spawn_glider_at, universe_tick, universe_new, universe_init_random, universe_init_gliders, universe_init_modulo, universe_width, universe_height, universe_cells */
/***/ (function(module, exports, __webpack_require__) {

eval("\"use strict\";\n// Instantiate WebAssembly module\nvar wasmExports = __webpack_require__.w[module.i];\n__webpack_require__.r(exports);\n// export exports from WebAssembly module\nfor(var name in wasmExports) if(name != \"__webpack_init__\") exports[name] = wasmExports[name];\n// exec imports from WebAssembly module (for esm order)\n/* harmony import */ var m0 = __webpack_require__(/*! ./wasmlife_bg.js */ \"./wasmlife_bg.js\");\n\n\n// exec wasm module\nwasmExports[\"__webpack_init__\"]()\n\n//# sourceURL=webpack:///./wasmlife_bg.wasm?");

/***/ }),

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var wasmlife__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! wasmlife */ \"./wasmlife.js\");\n/* harmony import */ var wasmlife_wasmlife_bg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! wasmlife/wasmlife_bg */ \"./wasmlife_bg.wasm\");\n\n\n\nconst GRID_COLOR = \"#CCCCCC\";\nconst DEAD_COLOR = \"#FFFFFF\";\nconst LIVE_COLOR = \"#000000\";\n\nconst CELL_SIZE = 10; //px\nconst UWIDTH  = 20;\nconst UHEIGHT = 20;\nconst INITP = 0.3;\n\nconst canvas = document.getElementById(\"wasmlife-canvas\");\ncanvas.width  = (CELL_SIZE + 1) * UWIDTH + 1;\ncanvas.height = (CELL_SIZE + 1) * UHEIGHT + 1;\nconst ctx = canvas.getContext('2d');\n\nlet tickms  = 100;\nlet resetms = 3 * 1000;\n\nlet animationId = null;\nlet start;\nlet total;\nconst renderLoop = (timestamp) => {\n  if (start === undefined) {\n    start = timestamp;\n    total = 0; \n  }\n  let elapsed = timestamp - start;\n  if (elapsed > tickms) {\n    //debugger;\n    universe.tick();\n    start = timestamp;\n    total += elapsed;\n    elapsed = 0;\n  }\n  drawGrid();\n  drawCells();\n  animationId = requestAnimationFrame(renderLoop);\n};\n\nconst resetButton = document.getElementById(\"reset\");\nconst reset = () => {\n  if (total > resetms) {\n    switch (getRandomInt(0,4)) {\n      case 0:\n        console.log(\"gliders\");\n        universe.init_gliders(getRandomInt(0,4));\n        tickms  = 500;\n        resetms = 5 * 1000;\n        break;\n      case 1:\n        console.log(\"random\");\n        universe.init_random(INITP);\n        tickms  = 0;\n        resetms = 10 * 1000;\n        break;\n      default:\n        console.log(\"modulo\");\n        universe.init_modulo();\n        tickms  = 80;\n        resetms = 5 * 1000;\n        break;\n    }\n    start = timestamp;\n    total = 0;\n  }\n}\n\nconst isPaused = () => {\n  return animationId === null;\n};\nconst playPauseButton = document.getElementById(\"play-pause\");\nconst play = () => {\n  playPauseButton.textContent = \"⏸\";\n  renderLoop();\n};\nconst pause = () => {\n  playPauseButton.textContent = \"▶\";\n  cancelAnimationFrame(animationId);\n  animationId = null;\n};\n\nresetButton.addEventListener(\"click\", event => {\n    reset();\n});\n\nplayPauseButton.addEventListener(\"click\", event => {\n  if (isPaused()) {\n    play();\n  } else {\n    pause();\n  }\n});\n\ncanvas.addEventListener(\"click\", event => {\n  const boundingRect = canvas.getBoundingClientRect();\n  const scaleX = canvas.width  / boundingRect.width;\n  const scaleY = canvas.height / boundingRect.height;\n  const canvasLeft = (event.clientX - boundingRect.left) * scaleX;\n  const canvasTop  = (event.clientY - boundingRect.top)  * scaleY;\n  const row = Math.min(Math.floor(canvasTop / (CELL_SIZE+1)), UHEIGHT-1);\n  const col = Math.min(Math.floor(canvasLeft/ (CELL_SIZE+1)),  UWIDTH-1);\n  universe.toggle_cell(row, col);\n  drawGrid();\n  drawCells();\n});\n\nconst getRandomInt = (min,max) => {\n  return min+ Math.floor(max * Math.random());\n};\n\nconst getIndex = (row, col) => {\n  return row*UWIDTH + col;\n};\n\nconst drawCells = () => {\n  const cellsPtr = universe.cells();\n  const cells = new Uint8Array(wasmlife_wasmlife_bg__WEBPACK_IMPORTED_MODULE_1__[\"memory\"].buffer, cellsPtr, UWIDTH * UHEIGHT);\n  ctx.beginPath();\n  for (let row = 0; row < UHEIGHT; row++) {\n    for (let col = 0; col < UWIDTH; col++) {\n      const idx = getIndex(row, col);\n      ctx.fillStyle = cells[idx] == wasmlife__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].Dead ? DEAD_COLOR : LIVE_COLOR;\n      ctx.fillRect(col*(CELL_SIZE+1)+1, row*(CELL_SIZE+1)+1, CELL_SIZE, CELL_SIZE);\n    }\n  }\n  ctx.stroke();\n};\n\nconst drawGrid = () => {\n  ctx.beginPath();\n  ctx.strokeStyle = GRID_COLOR;\n  for (let i = 0; i <= UWIDTH; i++) { //vertical lines\n    ctx.moveTo(i * (CELL_SIZE + 1) + 1    , 0);\n    ctx.lineTo(i * (CELL_SIZE + 1) + 1    , (CELL_SIZE + 1) * UHEIGHT + 1);\n  }\n  for (let j = 0; j <= UHEIGHT; j++) { //horizontal lines\n    ctx.moveTo(0                          , j * (CELL_SIZE + 1) + 1);\n    ctx.lineTo((CELL_SIZE + 1) * UWIDTH + 1, j * (CELL_SIZE + 1) + 1);\n  }\n  ctx.stroke();\n};\n\nlet universe = wasmlife__WEBPACK_IMPORTED_MODULE_0__[\"Universe\"].new(UWIDTH, UHEIGHT);\n//universe.init_modulo(UWIDTH, UHEIGHT);\n//universe.init_random(UWIDTH, UHEIGHT, INITP);\nuniverse.init_gliders(UWIDTH, UHEIGHT, 1);\ndrawGrid();\ndrawCells();\nplay();\n\n\n//# sourceURL=webpack:///./index.js?");

/***/ })

}]);
